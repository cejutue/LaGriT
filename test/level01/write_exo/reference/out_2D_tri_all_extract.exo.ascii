netcdf out_2D_tri_all_extract {
dimensions:
	len_string = 33 ;
	len_line = 81 ;
	four = 4 ;
	len_name = 256 ;
	time_step = UNLIMITED ; // (0 currently)
	num_dim = 2 ;
	num_nodes = 16 ;
	num_elem = 18 ;
	num_el_blk = 3 ;
	num_side_sets = 1 ;
	num_qa_rec = 1 ;
	num_el_in_blk1 = 9 ;
	num_nod_per_el1 = 3 ;
	num_el_in_blk2 = 3 ;
	num_nod_per_el2 = 3 ;
	num_el_in_blk3 = 6 ;
	num_nod_per_el3 = 3 ;
	num_side_ss1 = 12 ;
variables:
	double time_whole(time_step) ;
	int eb_status(num_el_blk) ;
	int eb_prop1(num_el_blk) ;
		eb_prop1:name = "ID" ;
	int ss_status(num_side_sets) ;
	int ss_prop1(num_side_sets) ;
		ss_prop1:name = "ID" ;
	double coordx(num_nodes) ;
	double coordy(num_nodes) ;
	char eb_names(num_el_blk, len_name) ;
	char ss_names(num_side_sets, len_name) ;
	char coor_names(num_dim, len_name) ;
	char qa_records(num_qa_rec, four, len_string) ;
	int connect1(num_el_in_blk1, num_nod_per_el1) ;
		connect1:elem_type = "TRI3" ;
	int connect2(num_el_in_blk2, num_nod_per_el2) ;
		connect2:elem_type = "TRI3" ;
	int connect3(num_el_in_blk3, num_nod_per_el3) ;
		connect3:elem_type = "TRI3" ;
	int elem_ss1(num_side_ss1) ;
	int side_ss1(num_side_ss1) ;

// global attributes:
		:api_version = 7.03f ;
		:version = 7.03f ;
		:floating_point_word_size = 8 ;
		:file_size = 1 ;
		:maximum_name_length = 32 ;
		:int64_status = 0 ;
		:title = "LaGriT to Exodus" ;
data:

 eb_status = 1, 1, 1 ;

 eb_prop1 = 1, 2, 3 ;

 ss_status = 1 ;

 ss_prop1 = 1 ;

 coordx = 0, 0.333333333333333, 0.666666666666667, 1, 0, 0.333333333333333, 
    0.666666666666667, 1, 0, 0.333333333333333, 0.666666666666667, 1, 0, 
    0.333333333333333, 0.666666666666667, 1 ;

 coordy = 0, 0, 0, 0, 0.333333333333333, 0.333333333333333, 
    0.333333333333333, 0.333333333333333, 0.666666666666667, 
    0.666666666666667, 0.666666666666667, 0.666666666666667, 1, 1, 1, 1 ;

 eb_names =
  "",
  "",
  "" ;

 ss_names =
  "" ;

 coor_names =
  "",
  "" ;

 qa_records =
  "motri",
  "probname",
  "Today",
  "Time" ;

 connect1 =
  11, 15, 14,
  9, 10, 13,
  15, 12, 16,
  6, 7, 10,
  7, 4, 8,
  7, 8, 11,
  11, 8, 12,
  10, 14, 13,
  5, 6, 9 ;

 connect2 =
  2, 3, 6,
  11, 12, 15,
  2, 6, 5 ;

 connect3 =
  1, 2, 5,
  6, 10, 9,
  10, 11, 14,
  7, 11, 10,
  3, 7, 6,
  3, 4, 7 ;

 elem_ss1 = 1, 4, 5, 6, 6, 8, 10, 10, 15, 16, 17, 18 ;

 side_ss1 = 1, 2, 3, 2, 3, 2, 3, 1, 1, 2, 2, 3 ;
}
